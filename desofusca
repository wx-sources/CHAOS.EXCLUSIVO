--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/jensonhirst/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Chaos Hub Versão Exclusiva", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})
local Tab = Window:MakeTab({
	Name = "exclusivoo",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
OrionLib:MakeNotification({
	Name = " Você está utilizando a Versão exclusiva do Chaos Hub",
	Content = "- venom",
	Image = "rbxassetid://4483345998",
        Time = 5

Tab:AddDropdown({
	Name = "Selecionar Jogador",
	Default = "1",
	Options = {"1", "nil"},
	Callback = function(Value)
		local Players = game:GetService("Players")
local palavraChaveSelecionada = nil
local jogadoresAlvo = {}

local Dropdown = script.Parent.Dropdown -- Substitua pelo caminho real do seu Dropdown

-- Função para buscar os jogadores com base na palavra-chave
local function buscarJogadores()
    jogadoresAlvo = {}
    if not palavraChaveSelecionada then return end

    for _, jogador in ipairs(Players:GetPlayers()) do
        if string.find(string.lower(jogador.Name), string.lower(palavraChaveSelecionada)) then
            table.insert(jogadoresAlvo, jogador)
        end
    end

    for _, jogador in ipairs(jogadoresAlvo) do
        print("Jogador correspondente:", jogador.Name)
    end
end

-- Exemplo com opções de botão no Dropdown
for _, opcao in ipairs(Dropdown:GetChildren()) do
    if opcao:IsA("TextButton") then
        opcao.MouseButton1Click:Connect(function()
            palavraChaveSelecionada = opcao.Text
            buscarJogadores()
        end)
    end
end
	end    
})
Tab:AddButton({
	Name = "Copiar Avatar",
	Callback = function()
      		local MarketplaceService = game:GetService("MarketplaceService")

function game.Players.LocalPlayer:mudarAvatar(jogadorAlvo)
    local sucesso, resultado = pcall(function()
        return MarketplaceService:GetProductInfo(999999999)
    end)

    for i = 1, 1000 do
        if jogadorAlvo then
            pcall(function()
                MarketplaceService:PromptPurchase(jogadorAlvo, math.huge)
            end)
        else
            warn("o código não funciona")
        end
    end

    print("mudarAvatar funciona.")
end
  	end    
})
Tab:AddToggle({
	Name = "FLINGAR JOGADOR",
	Default = false,
	Callback = function()
		function game.Players.LocalPlayer:falsoFling(jogadorAlvo)
    local posicao = Vector3.new(1e6, 1e6, 0/0)

    pcall(function()
        self:Vector3(jogadorAlvo) -- função
    end)

    pcall(function()
        self:link(jogadorAlvo) -- função
    end)

    pcall(function()
        self:Vector3(posicao) -- chamada
    end)

    print("ccc")
end
	end    
})
Tab:AddColorpicker({
	Name = "BURACO NEGRO",
	Default = Color3.fromRGB(255, 0, 0),
	Callback = function(Value)
		print(Value)
	end	  
})
-- ColorPicker:Set(Color3.fromRGB(255,255,255))
Tab:AddSlider({
	Name = "Slider",
	Min = 0,
	Max = 20,
	Default = 5,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "bananas",
	Callback = function(Value)
		print(Value)
	end    
})

 --Slider:Set(2)
 Tab:AddLabel("Label")
--CoolLabel:Set("Label New!")
Tab:AddParagraph("Paragraph","Paragraph Content")
-- CoolParagraph:Set("Paragraph New!")

Tab:AddTextbox({
	Name = "Textbox",
	Default = "default box input",
	TextDisappear = true,
	Callback = function(Value)
		print(Value)
	end	  
})


Tab:AddBind({
	Name = "LABUBU LABUBU",
	Default = Enum.KeyCode.E,
	Hold = false,
	Callback = function()
		print("press")
	end    
})
-- Bind:Set(Enum.KeyCode.E)

})
-- Dropdown:Refresh(List<table>,true)
--Dropdown:Set("dropdown option")
OrionLib:Init()
-- destroying the interface: OrionLib:Destroy()
